@model WebApplication.Models.Models.product_Products
<script src="~/Scripts/Home/ProductManagerView.js"></script>
@{
    ViewBag.Title = "Cập nhật sản phẩm";
}
<h2>Cập nhật sản phẩm</h2>
<div class="container">
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#common">Thông tin cơ bản</a></li>
        <li><a data-toggle="tab" href="#images">Hình ảnh</a></li>
    </ul>

    <div class="tab-content">
        <div id="common" class="tab-pane fade in active">
            <h3>Thông tin cơ bản</h3>
            @using (Html.BeginForm("Edit", "Product", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PriceOfUnit, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PriceOfUnit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PriceOfUnit, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                           @Html.TextAreaFor(model => model.Description2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.IsNewProduct, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsNewProduct == null ? false : (bool)model.IsNewProduct)
                                @Html.ValidationMessageFor(model => model.IsNewProduct, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsBestSellProduct, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsBestSellProduct == null ? false : (bool)model.IsBestSellProduct)
                                @Html.ValidationMessageFor(model => model.IsBestSellProduct, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                    @{
                bool IsNew = Model.IsNewProduct == null ? false : (bool)Model.IsNewProduct;
                <div class="form-group">
                    @Html.LabelFor(model => model.IsNewProduct, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBox("IsNewProduct", IsNew)
                        </div>
                    </div>
                </div>
                    }
                    @{
                bool IsBestSell = Model.IsBestSellProduct == null ? false : (bool)Model.IsBestSellProduct;
                <div class="form-group">
                    @Html.LabelFor(model => model.IsBestSellProduct, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBox("IsBestSellProduct", IsBestSell)
                        </div>
                    </div>
                </div>
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Cập nhật" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div id="images" class="tab-pane fade">
            <h3>Hình ảnh</h3>
            <div id="EditProduct_ListProductImages">
                @if (Model.share_Images != null)
                {
                    <table class="table">
                        <tr>
                            <th>
                                Tên ảnh
                            </th>
                            <th>
                                Ảnh
                            </th>
                            <th>
                                Trạng thái
                            </th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model.share_Images)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ImageName)
                                </td>
                                <td>
                                    @*@Html.DisplayFor(modelItem => item.ImagePath)*@
                                    <img src="@item.ImagePath" height="70" width="70" alt="ảnh không tồn tại" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                                <td>
                                    <input type="button" id="deleteProductImage" onclick="ProductManager.RequestDeleteProductImage(@Model.ID,@item.ID)" value="Xóa" class="btn btn-danger">
                                </td>
                            </tr>
                        }

                    </table>
                }

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" id="ProductEdit_UploadPartialView">
                    <div class="row">
                        <div class="col-md-12">
                            @if (ViewBag.Error != null)
                            {
                                <h4 style="color:red">@ViewBag.Error</h4>
                            }
                            @using (Ajax.BeginForm("UploadImage", "Product", new AjaxOptions() { UpdateTargetId = "EditProduct_ListProductImages", HttpMethod = "POST" }, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                    <input type="file" name="files" class="btn btn-info" style="display:inline-block;margin-right:10px;">
                                    <input type="hidden" value=@Model.ID name="IdProduct"/>
                                    <input type="submit" value="upload" class="btn btn-danger" style="display:inline-block;width:100px;"/>
                                }
</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Trở về", "Index")
</div>
<script>
    
    window.addEventListener("submit", function (e) {
        var form = e.target;
        if (form.getAttribute("enctype") === "multipart/form-data") {
            if (form.dataset.ajax) {
                e.preventDefault();
                e.stopImmediatePropagation();
                var xhr = new XMLHttpRequest();
                xhr.open(form.method, form.action);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        if (form.dataset.ajaxUpdate) {
                            var updateTarget = document.querySelector(form.dataset.ajaxUpdate);
                            if (updateTarget) {
                                updateTarget.innerHTML = xhr.responseText;
                            }
                        }
                    }
                };
                xhr.send(new FormData(form));
            }
        }
    }, true);

    ProductManager.init();
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ckeditor")
    <script>
        $(document).ready(function () {
            CKEDITOR.replace('Description2');
        });
    </script>
}
