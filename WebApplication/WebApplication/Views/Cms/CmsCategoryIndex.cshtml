@model IPagedList<WebApplication.Models.Models.cms_Categories>

@using PagedList;
@using PagedList.Mvc

@using WebApplication.Common.Constants
@using WebApplication.Libraries.Extensions
@using WebApplication.Libraries.CustomHtml
@using WebApplication.Models.ViewModels

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    int pageNumber = (int)ViewBag.PageNumber;
    int? categoryID = (int?)ViewBag.CategoryID;
    string searchKey = (string)ViewBag.SearchKey;

    IEnumerable<WebApplication.Models.Models.cms_Categories> rootCategories = (IEnumerable<WebApplication.Models.Models.cms_Categories>)ViewBag.RootCategories;

    string parentTitle = categoryID == null ? string.Empty : rootCategories.FirstOrDefault(c => c.ID == categoryID).Title.ToLower();
}

<div class="row">
    <div class="col-md-4 col-xs-4">
        <span class="glyphicon glyphicon-plus"></span>@Html.ActionLink("Thêm danh mục", "CreateCmsCategory", "Cms", null, null)
        @if (ViewBag.RootCategories != null)
        {
            <table class="table table-bordered">
                @foreach (var category in rootCategories)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(category.Title, "CmsCategoryIndex", "Cms", new { id = category.ID, pageNumber = pageNumber, searchKey = searchKey }, null)
                        </td>
                        <td>
                            <a title="Sửa" href="@Url.Action("EditCmsCategory", "Cms", new { id = category.ID })"><span class="glyphicon glyphicon-edit"></span></a>
                        </td>
                    </tr>
                }
            </table>
        }
    </div>
    <div class="col-md-8 col-xs-8">
        @if (Model != null && Model.Count > 0)
        {
            <h4 id="index_title">Danh sách @parentTitle</h4>
        }

        <p></p>
        @using (Html.BeginForm("CmsCategoryIndex", "Cms"))
        {
            if (categoryID != null)
            {
                <div class="row">
                    <div class="col-md-4">
                        <h4>
                            @Html.ActionLink(string.Format("Thêm mới"), "CreateCmsCategory", "Cms", new { parentID = categoryID }, null)
                        </h4>
                    </div>
                    <div class="col-md-4 pull-right">
                        @Html.TextBox("searchKey", searchKey, new { @type = "search", @placeholder = "Tìm kiếm", @class = "form-control pull-right" })
                    </div>
                </div>
            }

            if (Model != null && Model.Count > 0)
            {
                <table class="table table-bordered table-condensed table-hover table-responsive table-striped">
                    <tr>
                        <th>
                            @Html.DisplayName(Label.CmsCategory.Title)
                        </th>
                        <th>
                            @Html.DisplayName(Label.CmsCategory.Description)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.ActionLink(Label.CmsCategory.CreateSubCategory, RouteName.CmsCategoryAction.Create, new { parentID = item.ID }) |
                                @Html.ActionLink(Label.CRUD.Edit, RouteName.CmsCategoryAction.Edit, new { id = item.ID }) |
                                @Html.ActionLink(Label.CRUD.Delete, RouteName.CmsCategoryAction.Delete, new { id = item.ID })
                            </td>
                        </tr>
                    }
                </table>
            }

            <div class="pull-right">
                @Html.PagedListPager(Model, page => Url.Action("CmsCategoryIndex", "Cms", new { id = categoryID, pageNumber = page, searchKey = searchKey }))
            </div>
        }
    </div>
</div>


